name: Build, push, deploy ðŸ’ª

on:
  push:
    branches:
      - master

env:
  IMAGE_BASE: docker.pkg.github.com/${{ github.repository }}/veilarbregistrering

jobs:

  test-build-and-push:
    name: Test, build and push
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v1

    - name: Lag tag for image
      run: echo "::set-env name=TAG::$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')"

    - name: Lag full image referanse
      run: echo "::set-env name=IMAGE::$IMAGE_BASE:$TAG"

    - name: Set up Maven cache
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build with Maven
      run: mvn -Pgithub -B package --settings maven-settings.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and publish Docker image
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        docker build --tag ${IMAGE} .
        echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} --password-stdin
        docker push ${IMAGE}

  deploy-q0:
    name: Deploy to q0 FSS
    needs: test-build-and-push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Lag tag for image
      run: echo "::set-env name=TAG::$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')"

    - name: Lag full image referanse
      run: echo "::set-env name=IMAGE::$IMAGE_BASE:$TAG"

    - name: Deploy to Q0
      uses: nais/deploy/actions/deploy@v1
      env:
        APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
        CLUSTER: dev-fss
        RESOURCE: nais/naiserator.yaml
        VARS: nais/vars-q0.yaml

  deploy-q1:
    name: Deploy to q1 FSS
    needs: test-build-and-push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Lag tag for image
      run: echo "::set-env name=TAG::$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')"

    - name: Lag full image referanse
      run: echo "::set-env name=IMAGE::$IMAGE_BASE:$TAG"

    - name: Deploy to Q1
      uses: nais/deploy/actions/deploy@v1
      env:
        APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
        CLUSTER: dev-fss
        DRY_RUN: true
        RESOURCE: nais/naiserator.yaml
        VARS: nais/vars-q1.yaml

  deploy-prod:
    name: Deploy to Prod FSS
    needs: deploy-q0
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Lag tag for image
      run: echo "::set-env name=TAG::$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')"

    - name: Lag full image referanse
      run: echo "::set-env name=IMAGE::$IMAGE_BASE:$TAG"

    - name: Deploy to production
      uses: nais/deploy/actions/deploy@v1
      env:
        APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
        CLUSTER: prod-fss
        DRY_RUN: false
        RESOURCE: nais/naiserator.yaml
        VARS: nais/vars-p.yaml

  release:
    name: Tag and release
    needs: deploy-prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        name: Checkout

      - name: Lag tag for release
        run: echo "::set-env name=TAG::$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')"

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release/prod@${{ env.TAG }}
          release_name: Release to prod
          prerelease: false
