name: Build, push, deploy ðŸ’ª

on: [ push ]

env:
  IMAGE_BASE: ghcr.io/${{ github.repository }}/veilarbregistrering

jobs:

  test-build-and-push:
    name: Test, build and push
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

    - name: Lag tag for image
      run: echo "TAG=$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Lag full image referanse
      run: echo "IMAGE=$IMAGE_BASE:$TAG" >> $GITHUB_ENV

    - name: Set up Maven cache
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'adopt'

    - name: Build with Maven
      run: |
        locale
        java --version
        mvn -Pgithub -B package --settings maven-settings.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and publish Docker image
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo ${GITHUB_TOKEN} | docker login ghcr.io -u ${GITHUB_REPOSITORY} --password-stdin
        docker build --tag ${IMAGE} .
        docker push ${IMAGE}

  deploy-dev:
    name: Deploy to dev FSS
    needs: test-build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Lag tag for image
        run: echo "TAG=$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Lag full image referanse
        run: echo "IMAGE=$IMAGE_BASE:$TAG" >> $GITHUB_ENV

      - name: Deploy to Dev
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          DRY_RUN: false
          RESOURCE: nais/nais-dev-fss.yaml

  deploy-dev-gcp:
    name: Deploy to dev gcp
    needs: test-build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Lag tag for image
        run: echo "TAG=$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Lag full image referanse
        run: echo "IMAGE=$IMAGE_BASE:$TAG" >> $GITHUB_ENV

      - name: Deploy to Dev
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          DRY_RUN: false
          RESOURCE: nais/nais-dev-gcp.yaml

  deploy-prod:
    name: Deploy to prod-fss
    needs: deploy-dev
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3

    - name: Lag tag for image
      run: echo "TAG=$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Lag full image referanse
      run: echo "IMAGE=$IMAGE_BASE:$TAG" >> $GITHUB_ENV

    - name: Deploy to production
      uses: nais/deploy/actions/deploy@v1
      env:
        APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
        CLUSTER: prod-fss
        DRY_RUN: true
        RESOURCE: nais/nais-prod-fss.yaml

  deploy-prod-gcp:
    name: Deploy to prod-gcp
    needs: deploy-dev-gcp
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Lag tag for image
        run: echo "TAG=$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Lag full image referanse
        run: echo "IMAGE=$IMAGE_BASE:$TAG" >> $GITHUB_ENV

      - name: Deploy to production
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          DRY_RUN: true
          RESOURCE: nais/nais-prod-gcp.yaml

  release:
    name: Tag and release
    needs: deploy-prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout

      - name: Lag tag for release
        run: echo "TAG=$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release/prod@${{ env.TAG }}
          name: Release to prod
          prerelease: false
